from os import walk

source = open("resources.c", "w")
header = open("resources.h", "w")

notice = '// This file has been auto generated by "compile_resource.py"\n#include <stddef.h>\n\n '
source.write(notice)
header.write(notice)
header.write("""
#ifndef RESOURCES_H
#define RESOURCES_H
""")



_, _, filenames = next(walk("resources"))
for filename in filenames:
    symbol = ""
    for char in filename:
        if char.isalnum():
            symbol += char
        else:
            symbol += '_'
    header.write("extern const char RESOURCE_DATA_" + symbol + "[];\n")
    header.write("extern const size_t RESOURCE_SIZE_" + symbol + ";\n")
    
    source.write("const char RESOURCE_DATA_" + symbol + "[] = { ")
    
    file = open("resources/" + filename, "rb")
    data = file.read()
    for byte in data:
        source.write(str(byte) + ',')
    file.close()
    
    source.write("0};\n")
    source.write("const size_t RESOURCE_SIZE_" + symbol + " = sizeof(RESOURCE_DATA_" + symbol + ") - 1;\n\n")
header.write("#endif")
source.close()
header.close()
   
    
        
    

